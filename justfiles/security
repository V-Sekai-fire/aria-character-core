# Security and HSM recipes for Aria Character Core
# Copyright (c) 2025-present K. S. Ernest (iFire) Lee
# SPDX-License-Identifier: MIT

import "install"
import "services"

destroy-bao:
    #!/usr/bin/env bash
    echo "⚠️  WARNING: This will DESTROY all OpenBao data, secrets, and SoftHSM tokens!"
    echo "⚠️  This operation is IRREVERSIBLE!"
    echo "⚠️  All HSM keys and OpenBao data will be permanently lost!"
    echo ""
    echo "🔥 Proceeding with destruction in 5 seconds... (Ctrl+C to cancel)"
    sleep 5

    echo "🔥 Destroying OpenBao and SoftHSM..."

    # Stop OpenBao service
    echo "🛑 Stopping OpenBao service..."
    pkill -f "bao server" 2>/dev/null || true

    # Remove OpenBao data
    echo "💾 Removing OpenBao data..."
    sudo rm -rf /opt/bao/data/* 2>/dev/null || true

    # Remove SoftHSM tokens (this destroys all HSM keys including seal keys)
    echo "🔑 Removing SoftHSM tokens..."
    sudo rm -rf /var/lib/softhsm/tokens/* 2>/dev/null || true

    # Remove token files
    echo "📄 Removing token files..."
    rm -f .ci/openbao_root_token.txt

    echo "💥 OpenBao and SoftHSM destroyed successfully!"
    echo "🔐 All seal keys have been securely destroyed in SoftHSM"
    echo "📝 Run 'just foundation-startup' to reinitialize with completely new HSM and OpenBao setup"

rekey-bao: foundation-startup
    #!/usr/bin/env bash
    echo "🔐 Rekeying OpenBao with new HSM seal keys..."
    export VAULT_ADDR="http://localhost:8200"
    
    # Get current root token
    VAULT_TOKEN=""
    if [ -f /opt/bao/data/root_token.txt ]; then
        VAULT_TOKEN=$(cat /opt/bao/data/root_token.txt 2>/dev/null || echo "")
    fi
    
    if [ -z "$VAULT_TOKEN" ]; then
        VAULT_TOKEN="root"
    fi
    
    export VAULT_TOKEN
    echo "🔑 Using token for rekey: $VAULT_TOKEN"
    
    # Initialize rekey operation
    echo "🔄 Initializing rekey operation..."
    REKEY_RESPONSE=$(curl -sf -H "X-Vault-Token: $VAULT_TOKEN" \
                          -X PUT \
                          -d '{"secret_shares":1,"secret_threshold":1}' \
                          "$VAULT_ADDR/v1/sys/rekey/init" 2>/dev/null)
    
    if [ $? -eq 0 ]; then
        NONCE=$(echo "$REKEY_RESPONSE" | grep -o '"nonce":"[^"]*"' | cut -d'"' -f4)
        echo "📋 Rekey operation initialized with nonce: $NONCE"
        
        # Complete rekey (in a real scenario, you'd need multiple key shares)
        echo "✅ Rekey operation would continue with key shares in production"
        echo "🔐 This is a simplified rekey for development/testing"
    else
        echo "❌ Failed to initialize rekey operation"
        exit 1
    fi

rekey-softhsm:
    #!/usr/bin/env bash
    echo "🔐 Rekeying SoftHSM tokens..."
    
    # Set environment variable for SoftHSM config
    export SOFTHSM2_CONF=/etc/softhsm2.conf
    
    echo "🔍 Current SoftHSM slots:"
    softhsm2-util --show-slots
    
    echo ""
    echo "⚠️  WARNING: This will change SoftHSM token authentication!"
    echo "⚠️  Make sure to update OpenBao configuration accordingly!"
    echo ""
    echo "🔄 Proceeding with SoftHSM rekey in 5 seconds... (Ctrl+C to cancel)"
    sleep 5
    
    # Change SO PIN
    echo "🔐 Changing SO PIN..."
    softhsm2-util --change-pin --slot 0 --so-pin 1234 --new-so-pin 5678
    
    # Change User PIN  
    echo "🔐 Changing User PIN..."
    softhsm2-util --change-pin --slot 0 --pin 1234 --new-pin 5678
    
    echo "✅ SoftHSM pins changed successfully!"
    echo "📝 Remember to update OpenBao configuration with new pins:"
    echo "   - SO PIN: 5678"
    echo "   - User PIN: 5678"
    echo ""
    echo "🔧 You may need to restart OpenBao after updating configuration"
