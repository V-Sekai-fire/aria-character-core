# Build stage - download and prepare OpenBao
FROM almalinux:9-minimal AS builder

# Install build dependencies
RUN microdnf update -y && \
    microdnf install -y \
        rpm \
        wget && \
    microdnf clean all

# Download OpenBao HSM-enabled version from GitHub releases
ARG OPENBAO_VERSION=2.2.2
RUN wget -O openbao-hsm.rpm "https://github.com/openbao/openbao/releases/download/v2.2.2/bao-hsm_2.2.2_linux_amd64.rpm"

# Runtime stage - minimal image with only runtime dependencies
FROM almalinux:9-minimal AS runtime

# Install runtime dependencies including SoftHSM and utilities
RUN microdnf update -y && \
    microdnf install -y \
        bash \
        jq \
        openssl \
        softhsm && \
    microdnf clean all

# Copy and install OpenBao from build stage
COPY --from=builder /openbao-hsm.rpm /tmp/openbao-hsm.rpm
RUN rpm -ivh /tmp/openbao-hsm.rpm && \
    rm /tmp/openbao-hsm.rpm && \
    ln -s /usr/bin/bao /usr/local/bin/openbao && \
    ln -s /usr/bin/bao /usr/local/bin/bao

# Copy configuration and startup scripts  
COPY vault-hsm.hcl /vault-hsm.hcl
COPY vault-fallback.hcl /vault-fallback.hcl
COPY scripts/start-bao.sh /usr/local/bin/start-bao.sh

# Make scripts executable
RUN chmod +x /usr/local/bin/start-bao.sh && \
    chmod 644 /vault-hsm.hcl /vault-fallback.hcl

# Stay as root to handle volume permissions at runtime

# Expose port
EXPOSE 8200

# Set the entrypoint to our startup script
ENTRYPOINT ["/usr/local/bin/start-bao.sh"]

