# Copyright (c) 2025-present K. S. Ernest (iFire) Lee
# SPDX-License-Identifier: MIT

name: Foundation Layer Startup (Local)

on:
  workflow_dispatch: # Allow manual triggering
  push:
    branches:
      - main # Or your primary development branch

jobs:
  build-and-start-foundation:
    name: Build and Start Foundation Layer Locally
    runs-on: ubuntu-latest
    # No permissions needed for GHCR push if not pushing

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3

      # Skip Docker login if not pushing to a registry
      # - name: Log in to GitHub Container Registry
      #   uses: docker/login-action@v3
      #   with:
      #     registry: ${{ env.REGISTRY }}
      #     username: ${{ github.actor }}
      #     password: ${{ secrets.GITHUB_TOKEN }}

      # Define image names for local build, no registry prefix needed
      - name: Define local image names and tags
        id: image_defs
        run: |
          REPO_NAME_LOWER=$(echo "${{ github.repository }}" | awk -F '/' '{print tolower($2)}')
          OWNER_LOWER=$(echo "${{ github.repository_owner }}" | awk -F '/' '{print tolower($1)}')
          echo "SOFTHSM_IMAGE_NAME=$OWNER_LOWER/$REPO_NAME_LOWER/softhsm-setup" >> $GITHUB_ENV
          echo "OPENBAO_IMAGE_NAME=$OWNER_LOWER/$REPO_NAME_LOWER/openbao" >> $GITHUB_ENV
          echo "COCKROACHDB_IMAGE_NAME=$OWNER_LOWER/$REPO_NAME_LOWER/cockroachdb" >> $GITHUB_ENV
          echo "IMAGE_TAG=sha-${{ github.sha }}" >> $GITHUB_ENV
          echo "IMAGE_TAG_LATEST=latest" >> $GITHUB_ENV

      - name: Build softhsm-setup image locally
        uses: docker/build-push-action@v5
        with:
          context: ./docker_softhsm
          file: ./docker_softhsm/Dockerfile
          push: false # Do not push to registry
          load: true # Load image into local Docker daemon
          tags: |
            ${{ env.SOFTHSM_IMAGE_NAME }}:${{ env.IMAGE_TAG }}
            ${{ env.SOFTHSM_IMAGE_NAME }}:${{ env.IMAGE_TAG_LATEST }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build OpenBao image locally
        uses: docker/build-push-action@v5
        with:
          context: ./docker_custom_openbao
          file: ./docker_custom_openbao/Dockerfile
          push: false # Do not push to registry
          load: true # Load image into local Docker daemon
          tags: |
            ${{ env.OPENBAO_IMAGE_NAME }}:${{ env.IMAGE_TAG }}
            ${{ env.OPENBAO_IMAGE_NAME }}:${{ env.IMAGE_TAG_LATEST }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build CockroachDB image locally
        uses: docker/build-push-action@v5
        with:
          context: ./custom-cockroachdb
          file: ./custom-cockroachdb/Dockerfile
          push: false # Do not push to registry
          load: true # Load image into local Docker daemon
          tags: |
            ${{ env.COCKROACHDB_IMAGE_NAME }}:${{ env.IMAGE_TAG }}
            ${{ env.COCKROACHDB_IMAGE_NAME }}:${{ env.IMAGE_TAG_LATEST }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Start Foundation Layer Services
        env:
          OPENBAO_PKCS11_PIN: ${{ secrets.OPENBAO_PKCS11_PIN }}
          OPENBAO_PKCS11_SO_PIN: ${{ secrets.OPENBAO_PKCS11_SO_PIN }}
          OPENBAO_PKCS11_SLOT: ${{ secrets.OPENBAO_PKCS11_SLOT }}
        run: |
          echo "Starting foundation services (softhsm-setup, openbao, cockroachdb)..."

          echo "SOFTHSM_IMAGE_NAME_WITH_TAG=${{ env.SOFTHSM_IMAGE_NAME }}:${{ env.IMAGE_TAG_LATEST }}" >> $GITHUB_ENV
          echo "OPENBAO_IMAGE_NAME_WITH_TAG=${{ env.OPENBAO_IMAGE_NAME }}:${{ env.IMAGE_TAG_LATEST }}" >> $GITHUB_ENV
          echo "COCKROACHDB_IMAGE_NAME_WITH_TAG=${{ env.COCKROACHDB_IMAGE_NAME }}:${{ env.IMAGE_TAG_LATEST }}" >> $GITHUB_ENV
          
          cat << EOF > docker-compose.override.yml
          version: '3.8'
          services:
            softhsm-setup:
              image: ${{ env.SOFTHSM_IMAGE_NAME_WITH_TAG }}
            openbao:
              image: ${{ env.OPENBAO_IMAGE_NAME_WITH_TAG }}
            cockroachdb:
              image: ${{ env.COCKROACHDB_IMAGE_NAME_WITH_TAG }}
          EOF

          echo "Using override file:"
          cat docker-compose.override.yml

          docker-compose -f docker-compose.yml -f docker-compose.override.yml up -d softhsm-setup openbao cockroachdb

          echo "Waiting for services to initialize (60 seconds)..."
          sleep 60

          echo "Current status of Docker services:"
          docker-compose -f docker-compose.yml -f docker-compose.override.yml ps

          echo "Logs for OpenBao:"
          docker-compose -f docker-compose.yml -f docker-compose.override.yml logs openbao

          echo "Logs for CockroachDB:"
          docker-compose -f docker-compose.yml -f docker-compose.override.yml logs cockroachdb
          
          echo "Checking OpenBao health..."
          timeout 120s bash -c \
          'until docker-compose -f docker-compose.yml -f docker-compose.override.yml exec openbao curl -sf http://localhost:8200/v1/sys/health; do \
            echo "Waiting for OpenBao to be healthy..."; \
            sleep 5; \
          done'
          echo "OpenBao is healthy."

          echo "Checking CockroachDB health..."
          timeout 120s bash -c \
          'until docker-compose -f docker-compose.yml -f docker-compose.override.yml exec cockroachdb /cockroach/cockroach node status --insecure --host=localhost:26257; do \
            echo "Waiting for CockroachDB to be healthy..."; \
            sleep 5; \
          done'
          echo "CockroachDB is healthy."