version: '3.8'

services:
  softhsm-setup:
    build:
      context: ./docker_softhsm # Path to the directory containing the Dockerfile and script
      dockerfile: Dockerfile
    environment:
      - OPENBAO_PKCS11_PIN # Provided by GitHub Actions secrets
      - OPENBAO_PKCS11_SO_PIN # Provided by GitHub Actions secrets
      - OPENBAO_PKCS11_KEY_LABEL=openbao-key # Example key label
      # TOKEN_DIRECTORY & TOKEN_LABEL can also be passed if defaults in script are not desired
    volumes:
      - softhsm_tokens:/var/lib/softhsm/tokens # Persist tokens
    # This service should run to completion to set up SoftHSM.
    # OpenBao will then use the token store.

  openbao:
    build:
      context: ./docker_custom_openbao
      dockerfile: Dockerfile
      args:
        OPENBAO_VERSION: latest # Or specify a particular version
    ports:
      - "8200:8200"
    environment:
      # CRITICAL: DO NOT hardcode secrets here, especially for CI/CD.
      # This token MUST be injected securely, e.g., via GitHub Actions secrets.
      # Example GitHub Actions workflow:
      # env:
      #   OPENBAO_BOOTSTRAP_SECRET_TOKEN: ${{ secrets.OPENBAO_BOOTSTRAP_TOKEN_FROM_GITHUB }}
      # ... then docker-compose up will pick it up if the variable name matches.
      - OPENBAO_BOOTSTRAP_SECRET_PLACEHOLDER_TOKEN # Value to be provided by CI environment variable
      # Add other necessary OpenBao configuration environment variables
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8200/v1/sys/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s # Give OpenBao time to initialize
    volumes:
      - openbao_data:/openbao/data
      - ./openbao-softhsm.hcl:/openbao/config/openbao-softhsm.hcl:ro
      - softhsm_tokens:/var/lib/softhsm/tokens # Mount the shared token volume
    depends_on:
      softhsm-setup:
        condition: service_completed_successfully # Wait for setup to finish

  cockroachdb:
    build:
      context: ./docker_cockroachdb
      dockerfile: Dockerfile
      args:
        GIT_SHA: 865aff1595e494c2ce95030c7a2f20c4370b5ff8 # Default SHA, can be overridden
    ports:
      - "26257:26257"
      - "8080:8080" # CockroachDB UI
    environment:
      # Add any necessary CockroachDB environment variables
      - COCKROACH_INSECURE=true # For development/CI; use secure mode for production
    healthcheck:
      test: ["CMD", "/cockroach/cockroach", "node", "status", "--insecure", "--host=localhost:26257"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s
    volumes:
      - cockroachdb_data:/cockroach/cockroach-data

  # Placeholder for your Aria services
  # You will need to define each of your Aria services similarly
  aria-service-placeholder:
    # build: ./path-to-your-aria-service-dockerfile # If building from a Dockerfile
    image: your-aria-service-image:latest # Or use a pre-built image
    ports:
      - "YOUR_ARIA_SERVICE_PORT:YOUR_ARIA_SERVICE_PORT" # Expose necessary ports
    environment:
      - OPENBAO_ADDR=http://openbao:8200
      # Add other environment variables your service needs,
      # including those for CockroachDB connection if applicable
      - DATABASE_URL=postgresql://root@cockroachdb:26257/defaultdb?sslmode=disable # Example for CockroachDB
    depends_on:
      openbao:
        condition: service_healthy
      cockroachdb:
        condition: service_healthy
    healthcheck:
      # Define a health check appropriate for your Aria service
      test: ["CMD", "curl", "-f", "http://localhost:YOUR_ARIA_SERVICE_PORT/health"] # Example
      interval: 10s
      timeout: 5s
      retries: 3

volumes:
  openbao_data:
  cockroachdb_data:
  softhsm_tokens:

# Potentially use a docker-compose.override.yml for CI-specific tweaks
# or local development overrides.
