version: '3.8'

services:
  softhsm-setup:
    build:
      context: ./docker_softhsm
      dockerfile: Dockerfile
    environment:
      - OPENBAO_PKCS11_PIN # Provided by GitHub Actions secrets
      - OPENBAO_PKCS11_SO_PIN # Provided by GitHub Actions secrets
      - OPENBAO_PKCS11_KEY_LABEL=openbao-key # Example key label
    volumes:
      - softhsm_tokens:/var/lib/softhsm/tokens

  openbao:
    build:
      context: ./docker_custom_openbao
      dockerfile: Dockerfile
      args:
        OPENBAO_VERSION: latest
    ports:
      - "8200:8200"
    environment:
      # PKCS#11 Auto-Unseal Configuration (Zero Trust Principle: Secure Unsealing)
      # These variables are critical for OpenBao's secure auto-unseal mechanism.
      # MUST be provided securely via GitHub Actions secrets in a CI environment.
      - OPENBAO_PKCS11_SLOT # e.g., '0' or the specific slot ID for the SoftHSM token
      - OPENBAO_PKCS11_PIN # The user PIN for the PKCS#11 token
      - OPENBAO_PKCS11_KEY_LABEL # The label of the encryption key on the token that OpenBao uses
      # - OPENBAO_PKCS11_HMAC_KEY_LABEL # Optional but recommended for an additional layer of security

      # Note on Service Authentication (Zero Trust Principle: Authenticated & Authorized Requests):
      # Client services (Aria services) should authenticate to OpenBao using a strong mechanism
      # like AppRole. AppRoles and associated policies should be configured in OpenBao
      # after its initial unseal to grant services least-privilege access to their required secrets.
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8200/v1/sys/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    volumes:
      - openbao_data:/openbao/data
      - ./openbao-softhsm.hcl:/openbao/config/openbao-softhsm.hcl:ro
      - softhsm_tokens:/var/lib/softhsm/tokens
    depends_on:
      softhsm-setup:
        condition: service_completed_successfully

  cockroachdb:
    build:
      context: ./custom-cockroachdb
      dockerfile: Dockerfile
      args:
        GIT_SHA: 865aff1595e494c2ce95030c7a2f20c4370b5ff8 # Default SHA, can be overridden
    ports:
      - "26257:26257"
      - "8080:8080" # CockroachDB UI
    environment:
      - COCKROACH_INSECURE=true # For development/CI; use secure mode for production
    healthcheck:
      test: ["CMD", "/usr/local/bin/cockroach", "node", "status", "--insecure", "--host=localhost:26257"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s
    volumes:
      - cockroachdb_data:/cockroach-data

  s3-config-generator:
    build:
      context: ./s3-config-generator
      dockerfile: Dockerfile
    environment:
      - OPENBAO_ADDR=http://openbao:8200
      - OPENBAO_APPROLE_ROLE_ID # Must be provided by GitHub Actions secrets
      - OPENBAO_APPROLE_SECRET_ID # Must be provided by GitHub Actions secrets
      - OPENBAO_S3_CRED_PATH=secret/data/seaweedfs/s3config # Path in OpenBao holding the s3.json content
    volumes:
      - seaweedfs_config_volume:/etc/seaweedfs # Volume to share s3.json with SeaweedFS
    depends_on:
      openbao:
        condition: service_healthy

  seaweedfs:
    image: chrislusf/seaweedfs:latest
    ports:
      - "9333:9333" # Master port
      - "8081:8080" # Volume server port (mapped to host 8081 to avoid conflict with CockroachDB UI)
      - "8333:8333" # S3 gateway port
    command: server -master.port=9333 -volume.port=8080 -s3 -s3.port=8333 -dir=/data -s3.config=/etc/seaweedfs/s3.json
    volumes:
      - seaweedfs_data:/data
      - seaweedfs_config_volume:/etc/seaweedfs:ro
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8333"] # Basic check for S3 API
      interval: 15s
      timeout: 5s
      retries: 5
      start_period: 30s
    depends_on:
      s3-config-generator:
        condition: service_completed_successfully

  aria-service-placeholder:
    build: ./docker_seaweedfs/Dockerfile
    ports:
      - "YOUR_ARIA_SERVICE_PORT:YOUR_ARIA_SERVICE_PORT" # Expose necessary ports
    environment:
      - OPENBAO_ADDR=http://openbao:8200
      - OPENBAO_S3_ACCESS_KEY_PATH=secret/data/aria_storage/s3_access_key
      - OPENBAO_S3_SECRET_KEY_PATH=secret/data/aria_storage/s3_secret_key
      - OPENBAO_S3_BUCKET_NAME_PATH=secret/data/aria_storage/s3_bucket_name
      # Other S3 related config (static or less sensitive):
      - S3_ENDPOINT_URL=http://seaweedfs:8333
      - S3_REGION=us-east-1 # Often a placeholder for S3-compatible stores
      - S3_USE_PATH_STYLE_ENDPOINT=true
      - DATABASE_URL_PATH_IN_OPENBAO=secret/data/aria_storage/db_url
      - OPENBAO_APPROLE_ROLE_ID # To be provided by GitHub Actions secrets
      - OPENBAO_APPROLE_SECRET_ID # To be provided by GitHub Actions secrets
    depends_on:
      openbao:
        condition: service_healthy
      cockroachdb:
        condition: service_healthy
      seaweedfs:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:YOUR_ARIA_SERVICE_PORT/health"]
      interval: 10s
      timeout: 5s
      retries: 3

volumes:
  openbao_data:
  cockroachdb_data:
  softhsm_tokens:
  seaweedfs_data:
  seaweedfs_config_volume:
